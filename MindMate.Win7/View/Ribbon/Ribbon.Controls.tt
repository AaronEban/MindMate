<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ assembly name="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using MindMate.View.EditorTabs;
using MindMate.View.MapControls;
using RibbonLib;
using RibbonLib.Controls;

namespace MindMate.View.Ribbon
{
	public partial class Ribbon
    {
<#
	string xml = File.ReadAllText(this.Host.ResolvePath("RibbonMarkup.xml"));
	xml = xml.Replace(@"xmlns='http://schemas.microsoft.com/windows/2009/Ribbon'", "");
	XElement root = XElement.Parse(xml);
	XElement ribbon = root.Descendants("Ribbon").First();
	IEnumerable<XElement> commands = 
		from el in ribbon.Descendants()
		where el.Attribute("CommandName") != null
		select el;		

	foreach(XElement el in commands)  
    { #>
		private Ribbon<#= el.Name #> <#= GetFieldName(el)#>;		
<#	} #>

		private void InitializeComponents()
		{
			// Instantiate Controls
<#foreach(XElement el in commands)  { #>
			<#= GetFieldName(el)#> = new Ribbon<#= el.Name #>(ribbon, (uint)RibbonMarkupCommands.<#= GetFieldName(el)#>);
<#	} #>

		}
	
	}
}

<#+
public static string GetFieldName(XElement el)
{
	//if(el.Name == "")
	return el.Attribute("CommandName").Value;
}
#>